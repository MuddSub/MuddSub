#!/usr/bin/env python
PACKAGE = "drivers"

from dynamic_reconfigure.parameter_generator_catkin import *

# gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
# gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
# gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
# gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)
#
# size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                        gen.const("Medium",     int_t, 1, "A medium constant"),
#                        gen.const("Large",      int_t, 2, "A large constant"),
#                        gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                      "An enum to set size")
#
# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

gen = ParameterGenerator()
gen.add("depth", double_t, 0, "The depth to publish", 0.5)
exit(gen.generate(PACKAGE, "drivers_server", "Drivers"))

# Add parameters representing a set of 4 thrusters
gen = ParameterGenerator()
gen.add("bl", int_t, 0, "int for back left thruster pwm", 1500, 0, 3000)
gen.add("br", int_t, 0, "int for back right thruster pwm", 1500, 0, 3000)
gen.add("fl", int_t, 0, "int for front left thruster pwm", 1500, 0, 3000)
gen.add("fr", int_t, 0, "int for front right thruster pwm", 1500, 0, 3000)
exit(gen.generate(PACKAGE, "drivers_server", "Thrusters"))
