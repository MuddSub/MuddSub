<launch>
	<!-- Convert Kg force to PWM number (1100-1900) -->
  <node name="force_to_pulse" pkg="drivers" type="kgf_to_pulse.py" output="screen" />

  <!-- Sending PWM over serial connection to the teensy -->
  <node name="pulse_to_teensy" pkg="drivers" type="pulse_to_teensy.py" output="screen" />

  <!-- Transformation between ENU and NED -->
	<node name="publish_ned_transform" pkg="drivers" type="publish_ned_transform.py" output="screen" />

  <!-- Configure UUV to get transformations between base link and thrusters -->
	<include file="$(find core)/descriptions/alfie_description/launch/alfie_run.launch" />

  <!-- How we position ourselves relative to (0,0,0) -> publish the world_ned frame -->
	<include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>

  <!-- runs thruster manager (dependent on alfie_run.launch) -->
	<include file="$(find core)/descriptions/alfie_control/launch/start_thruster_manager.launch">
		<arg name="reset_tam" value="true" />
	</include>

  <!-- Translates controls to thruster allocation -->
	<node name="republish_wrench" pkg="drivers" type="republish_wrench.py" />

  <!-- translate thruster forces topic back to our naming scheme -->
	<node name="republish_thruster_forces" pkg="drivers" type="republish_thruster_forces.py" output="screen" />

</launch>
