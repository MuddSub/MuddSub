#!/usr/bin/env python
PACKAGE = "mission"

import math
from dynamic_reconfigure.parameter_generator_catkin import *

# follow the examples below
# Information about the arguments: http://wiki.ros.org/dynamic_reconfigure/Tutorials/HowToWriteYourFirstCfgFile
# gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
# gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
# gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
# gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)
#
# size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                        gen.const("Medium",     int_t, 1, "A medium constant"),
#                        gen.const("Large",      int_t, 2, "A large constant"),
#                        gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                      "An enum to set size")
#
# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

# We need one for each namespace. The third argument in the generate function determines the name of the file
# Add parameters representing a position
gen = ParameterGenerator()
gen.add("x", double_t, 0, "double for x position", 0.0, -10, 10)
gen.add("y", double_t, 0, "double for y position", 0.0, -10, 10)
gen.add("z", double_t, 0, "double for z position", 0.0, -10, 10)
gen.generate(PACKAGE, "mission_server", "Position")

# Add parameters representing an orientation
gen = ParameterGenerator()
gen.add("roll", double_t, 0, "double for roll", 0.0, -math.pi, math.pi)
gen.add("pitch", double_t, 0, "double for pitch", 0.0, -math.pi, math.pi)
gen.add("yaw", double_t, 0, "double for yaw", 0.0, -math.pi, math.pi)
gen.generate(PACKAGE, "mission_server", "Orientation")
exit()